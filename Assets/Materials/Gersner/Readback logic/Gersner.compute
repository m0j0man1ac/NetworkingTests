// SimpleCompute.compute
#pragma kernel Main


//compute buffer
//in / readonly
StructuredBuffer<float3> InPositions;

//out / writeable Read/Write -> RW
RWStructuredBuffer<float3> Positions; // The buffer we'll write to

//other variables
float _Time;
int _BufferSize;
int _idX;
int _idY;
//int _BackstepIterations;
float4 _WaveA;
float4 _WaveB;
float4 _WaveC;

#include "GersnerCalcFuntion.hlsl"

#define BACKSTEP_ITERATIONS 1

[numthreads(5, 5, 1)]
void Main(uint3 id : SV_DispatchThreadID)
{
    //early exit if outofbounds
    //if (id.x >= _idX || id.y >= _idY) 
    //    return;
    
    //overwrite positions with gerstner
    Positions[id.x * _idX + id.y] = SummedGerstnerPosition(InPositions[id.x * _idX + id.y], BACKSTEP_ITERATIONS,
        _WaveA, _WaveB, _WaveC);
    //Positions[id.x] = float3(1, 1, 1);
}